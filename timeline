| Haupttask        | Sub-Task                | Sch√§tzung | Aufwand |
| Plannungsphase   | Roadmap                 | 0,5h      | 20m     |
| Risikomanagement | FMEA                    | 1h        |         |
| Recherche        | REST File Upload        | 0,25h     | 10m     |
|                  | Docker image mit Spring | 0,5h      | 0,25    |
|                  | REST mit Spring         | 0,5h      | 1h      |
|                  | textract API            | 0,5h      | 1,5h    |
| Umsetzung        | Docker image mit Spring | 1,5h      | 0,5h    |
|                  | Spring Integration      | 1h        | 0,5h    |
|                  | REST mit Spring         | 1h        | 4h      |
|                  | textract API            | 1h        | 1,5h    |
|                  | REST File Upload        | 0,5h      | 0,5     |
|                  | Handling Secrets        | 0,5h      | 0,25    |
|                  | Error handling          | 1h        |         |
|                  | Readme                  | 0,25h     |         |
|                  | Java AWS SDK            | 2h        | ?       |
| Testing          | End-2-End               | 1h        | ?       |
|                  | Skalierbarkeit          | 0,5h      |         |
|                  | False-Positiv           | 0,5h      |         |
| Erweiterungen    | Unit-Tests              | 3h        |         |
|                  | Pagination              | 2h        |         |
|                  | Restrict File Types     | 0,5h      | 0,5h    |
|                  | Optimierungen           | ~         | 4h      |


# docker
docker build -t document-extraction-service:latest .
docker run -p 8083:8083 -v ~/.aws/credentials:/root/.aws/credentials:ro document-extraction-service

# test with curl
curl -s -X POST --form "file=@testfiles/diagram.jpeg" http://localhost:8083/api/v1/image | jq
curl -s -X GET http://localhost:8083/api/v1/ | jq
